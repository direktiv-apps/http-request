// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Executes HTTP requests from Direktiv",
    "title": "http-request",
    "version": "1.0.0",
    "x-direktiv-meta": {
      "category": "Network",
      "container": "direktiv/http-request",
      "issues": "https://github.com/direktiv-apps/http-request/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function executes HTTP requests. Query parameters, data payloads and custom headers are supported. The payload can be a string, \nbase64 or a file. It can be configured to return errors if the response status is not 2xx and it can be configured to ignore SSL errors in\ncase of self-signed certificates. ",
      "maintainer": "[direktiv.io](https://www.direktiv.io)",
      "url": "https://github.com/direktiv-apps/http-request"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "url"
              ],
              "properties": {
                "content": {
                  "description": "Defines the payload of the request. The ` + "`" + `kind` + "`" + ` value can have three different values: \n - string: Plain string payload, e.g. JSON\n - base64: Will be \"converted\" to binary and attached\n - file: File payload",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "description": "Kind of data",
                      "type": "string",
                      "default": "string",
                      "enum": [
                        "string",
                        "file",
                        "base64"
                      ]
                    },
                    "value": {
                      "description": "Value depends on ` + "`" + `kind` + "`" + ` value.",
                      "type": "string"
                    }
                  },
                  "example": {
                    "kind": "string",
                    "value": "This is the payload"
                  }
                },
                "error200": {
                  "description": "If set to ` + "`" + `true` + "`" + ` responses with status above 299 will be treated as errors.",
                  "type": "boolean",
                  "example": true
                },
                "headers": {
                  "description": "List of key/values send as headers with the request.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "myheader": "value"
                  }
                },
                "insecure": {
                  "description": "Skips the verification the server certificate chain and host name.",
                  "type": "boolean",
                  "example": true
                },
                "method": {
                  "description": "HTTP method. Defaults to GET.",
                  "type": "string",
                  "enum": [
                    "GET",
                    "HEAD",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS",
                    "CONNECT",
                    "TRACE",
                    "PATCH"
                  ],
                  "example": "POST"
                },
                "params": {
                  "description": "List of key/values appended to URL as query parameters.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "query1": "queryvalue"
                  }
                },
                "password": {
                  "description": "If username and password are set, it will be used for basic authenitcation for the request.",
                  "type": "string",
                  "example": "mypassword"
                },
                "url": {
                  "description": "URL for the request.",
                  "type": "string",
                  "example": "http://www.direktiv.io"
                },
                "username": {
                  "description": "If username and password are set, it will be used for basic authenitcation for the request.",
                  "type": "string",
                  "example": "myuser"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns headers and content of the requested URL. If the response is JSON it will be returned as JSON. \nIf it is not JSON the content is returned as base64 encoded string.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "http response code",
                  "type": "integer",
                  "format": "int64",
                  "example": 200
                },
                "headers": {
                  "description": "Key/Value map of response headers",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "content-type": "application/json"
                  }
                },
                "result": {
                  "description": "JSON or base64 content of the response",
                  "type": "string",
                  "example": {
                    "json": "response"
                  }
                },
                "status": {
                  "description": "test representation of status",
                  "type": "string",
                  "example": "200 OK"
                },
                "success": {
                  "description": "Indicates successful or unsuccessful execution of the request",
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "examples": {
              "greeting": "Hello YourName"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "http",
              "data": {
                "kind": "{{ default \"string\" .Content.Kind }}",
                "value": "{{ .Content.Value }}"
              },
              "errorNo200": "{{ .Error200 }}",
              "method": "{{ default \"get\" .Method }}",
              "password": "{{ default \"\" .Password }}",
              "runtime-headers": ".Headers",
              "url": "{{ .URL }}\n{{- if .Params }}?\n{{- range $i,$e := .Params }}{{ urlquery $i }}={{ urlquery $e }}{{- end }}\n{{- end }}",
              "username": "{{ default \"\" .Username }}"
            }
          ],
          "debug": true,
          "output": "{{ index . 0 | toJson }}"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: request\n     input: \n     url: \"http://www.direktiv.io\"",
            "title": "Basic"
          },
          {
            "content": "url: http://www.direktiv.io\nmethod: post",
            "title": "Post Request"
          },
          {
            "content": "- id: set\n     type: setter\n     variables:\n     - key: myfile\n       scope: workflow\n       mimeType: text/plain\n       value: This Is The Data\n     transition: send\n- id: send \n     type: action\n     action:\n       function: post\n       files:\n         - key: myfile\n           scope: workflow\n           as: myfile.txt\n       input: \n         url: \"https://webhook.site\"\n         content: \n           kind: file\n           value: myfile.txt",
            "title": "Request with File"
          },
          {
            "content": "- id: getter \n     type: action\n     action:\n       secrets: [\"mypassword\"]\n       function: get\n       input: \n         url: \"https://webhook.site\n         user: admin\n         password: jq(.secrets.mypassword)",
            "title": "Request with Basic Authentication"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: request\n    image: direktiv/http-request\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Executes HTTP requests from Direktiv",
    "title": "http-request",
    "version": "1.0.0",
    "x-direktiv-meta": {
      "category": "Network",
      "container": "direktiv/http-request",
      "issues": "https://github.com/direktiv-apps/http-request/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function executes HTTP requests. Query parameters, data payloads and custom headers are supported. The payload can be a string, \nbase64 or a file. It can be configured to return errors if the response status is not 2xx and it can be configured to ignore SSL errors in\ncase of self-signed certificates. ",
      "maintainer": "[direktiv.io](https://www.direktiv.io)",
      "url": "https://github.com/direktiv-apps/http-request"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "url"
              ],
              "properties": {
                "content": {
                  "description": "Defines the payload of the request. The ` + "`" + `kind` + "`" + ` value can have three different values: \n - string: Plain string payload, e.g. JSON\n - base64: Will be \"converted\" to binary and attached\n - file: File payload",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "description": "Kind of data",
                      "type": "string",
                      "default": "string",
                      "enum": [
                        "string",
                        "file",
                        "base64"
                      ]
                    },
                    "value": {
                      "description": "Value depends on ` + "`" + `kind` + "`" + ` value.",
                      "type": "string"
                    }
                  },
                  "example": {
                    "kind": "string",
                    "value": "This is the payload"
                  }
                },
                "error200": {
                  "description": "If set to ` + "`" + `true` + "`" + ` responses with status above 299 will be treated as errors.",
                  "type": "boolean",
                  "example": true
                },
                "headers": {
                  "description": "List of key/values send as headers with the request.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "myheader": "value"
                  }
                },
                "insecure": {
                  "description": "Skips the verification the server certificate chain and host name.",
                  "type": "boolean",
                  "example": true
                },
                "method": {
                  "description": "HTTP method. Defaults to GET.",
                  "type": "string",
                  "enum": [
                    "GET",
                    "HEAD",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS",
                    "CONNECT",
                    "TRACE",
                    "PATCH"
                  ],
                  "example": "POST"
                },
                "params": {
                  "description": "List of key/values appended to URL as query parameters.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "query1": "queryvalue"
                  }
                },
                "password": {
                  "description": "If username and password are set, it will be used for basic authenitcation for the request.",
                  "type": "string",
                  "example": "mypassword"
                },
                "url": {
                  "description": "URL for the request.",
                  "type": "string",
                  "example": "http://www.direktiv.io"
                },
                "username": {
                  "description": "If username and password are set, it will be used for basic authenitcation for the request.",
                  "type": "string",
                  "example": "myuser"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns headers and content of the requested URL. If the response is JSON it will be returned as JSON. \nIf it is not JSON the content is returned as base64 encoded string.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "http response code",
                  "type": "integer",
                  "format": "int64",
                  "example": 200
                },
                "headers": {
                  "description": "Key/Value map of response headers",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "content-type": "application/json"
                  }
                },
                "result": {
                  "description": "JSON or base64 content of the response",
                  "type": "string",
                  "example": {
                    "json": "response"
                  }
                },
                "status": {
                  "description": "test representation of status",
                  "type": "string",
                  "example": "200 OK"
                },
                "success": {
                  "description": "Indicates successful or unsuccessful execution of the request",
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "examples": {
              "greeting": "Hello YourName"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "http",
              "data": {
                "kind": "{{ default \"string\" .Content.Kind }}",
                "value": "{{ .Content.Value }}"
              },
              "errorNo200": "{{ .Error200 }}",
              "method": "{{ default \"get\" .Method }}",
              "password": "{{ default \"\" .Password }}",
              "runtime-headers": ".Headers",
              "url": "{{ .URL }}\n{{- if .Params }}?\n{{- range $i,$e := .Params }}{{ urlquery $i }}={{ urlquery $e }}{{- end }}\n{{- end }}",
              "username": "{{ default \"\" .Username }}"
            }
          ],
          "debug": true,
          "output": "{{ index . 0 | toJson }}"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: request\n     input: \n     url: \"http://www.direktiv.io\"",
            "title": "Basic"
          },
          {
            "content": "url: http://www.direktiv.io\nmethod: post",
            "title": "Post Request"
          },
          {
            "content": "- id: set\n     type: setter\n     variables:\n     - key: myfile\n       scope: workflow\n       mimeType: text/plain\n       value: This Is The Data\n     transition: send\n- id: send \n     type: action\n     action:\n       function: post\n       files:\n         - key: myfile\n           scope: workflow\n           as: myfile.txt\n       input: \n         url: \"https://webhook.site\"\n         content: \n           kind: file\n           value: myfile.txt",
            "title": "Request with File"
          },
          {
            "content": "- id: getter \n     type: action\n     action:\n       secrets: [\"mypassword\"]\n       function: get\n       input: \n         url: \"https://webhook.site\n         user: admin\n         password: jq(.secrets.mypassword)",
            "title": "Request with Basic Authentication"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: request\n    image: direktiv/http-request\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "PostParamsBodyContent": {
      "description": "Defines the payload of the request. The ` + "`" + `kind` + "`" + ` value can have three different values: \n - string: Plain string payload, e.g. JSON\n - base64: Will be \"converted\" to binary and attached\n - file: File payload",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of data",
          "type": "string",
          "default": "string",
          "enum": [
            "string",
            "file",
            "base64"
          ]
        },
        "value": {
          "description": "Value depends on ` + "`" + `kind` + "`" + ` value.",
          "type": "string"
        }
      },
      "example": {
        "kind": "string",
        "value": "This is the payload"
      }
    },
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
